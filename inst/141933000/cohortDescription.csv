phenotypeId,webApiCohortId,cohortName,logicDescription,cohortId,referentConceptId,cohortType,PMID,metaDataJson,cohortDefinitionSql,cohortDefinitionJson
141933000,17393,Alopecia areata referent incident cohort,"Persons with condition occurrence of referent concept (141933) or descendants, for the first time in the person's history. Persons exit cohort at the end of the observation period.",141933001,141933,referent,,"{
	""phenotypeId"" : [
		""141933000""
	],
	""webApiCohortId"" : [
		""17393""
	],
	""cohortName"" : [
		""Alopecia areata referent incident cohort""
	],
	""oldCohortName"" : [
		""[PL 141933001] Alopecia areata referent concept incident cohort: First occurrence of referent concept + descendants with >=365d prior observation""
	],
	""logicDescription"" : [
		""Persons with condition occurrence of referent concept (141933) or descendants, for the first time in the person's history. Persons exit cohort at the end of the observation period.""
	],
	""cohortId"" : [
		""141933001""
	],
	""referentConceptId"" : [
		""141933""
	],
	""cohortType"" : [
		""referent""
	],
	""PMID"" : [
		""""
	],
	""oldPhenotypeId"" : [
		""141933000""
	],
	""referentConceptName"" : [
		""Alopecia areata""
	]
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (141933)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (141933)
  and c.invalid_reason is null

) I
) C
;

with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* , row_number() over (PARTITION BY co.person_id ORDER BY co.condition_start_date, co.condition_occurrence_id) as ordinal
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C

WHERE C.ordinal = 1
-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,365,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 0, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,0,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select ir.cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from @results_database_schema.cohort_inclusion ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
WHERE ir.cohort_definition_id = @target_cohort_id
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select ir.cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from @results_database_schema.cohort_inclusion ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
WHERE ir.cohort_definition_id = @target_cohort_id
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

-- BEGIN: Censored Stats

-- END: Censored Stats

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;





TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""First"" : true,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 365,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""First""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Alopecia areata"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 141933,
							""CONCEPT_NAME"" : ""Alopecia areata"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""68225006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""First""
	},
	""InclusionRules"" : [],
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}"
141933000,17392,Alopecia areata referent prevalent cohort,"Persons with condition occurrence of referent concept (141933) or descendants, for the first time in the person's history, with at least 365 days of prior continuous observation. Persons exit cohort at the end of the observation period.",141933002,141933,referent,,"{
	""phenotypeId"" : [
		""141933000""
	],
	""webApiCohortId"" : [
		""17392""
	],
	""cohortName"" : [
		""Alopecia areata referent prevalent cohort""
	],
	""oldCohortName"" : [
		""[PL 141933002] Alopecia areata referent concept prevalent cohort: First occurrence of referent concept + descendants""
	],
	""logicDescription"" : [
		""Persons with condition occurrence of referent concept (141933) or descendants, for the first time in the person's history, with at least 365 days of prior continuous observation. Persons exit cohort at the end of the observation period.""
	],
	""cohortId"" : [
		""141933002""
	],
	""referentConceptId"" : [
		""141933""
	],
	""cohortType"" : [
		""referent""
	],
	""PMID"" : [
		""""
	],
	""oldPhenotypeId"" : [
		""141933000""
	],
	""referentConceptName"" : [
		""Alopecia areata""
	]
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (141933)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (141933)
  and c.invalid_reason is null

) I
) C
;

with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* , row_number() over (PARTITION BY co.person_id ORDER BY co.condition_start_date, co.condition_occurrence_id) as ordinal
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C

WHERE C.ordinal = 1
-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 0, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,0,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select ir.cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from @results_database_schema.cohort_inclusion ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
WHERE ir.cohort_definition_id = @target_cohort_id
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select ir.cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from @results_database_schema.cohort_inclusion ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
WHERE ir.cohort_definition_id = @target_cohort_id
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

-- BEGIN: Censored Stats

-- END: Censored Stats

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;





TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""First"" : true,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""First""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Alopecia areata"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 141933,
							""CONCEPT_NAME"" : ""Alopecia areata"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""68225006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""First""
	},
	""InclusionRules"" : [],
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}"
141933000,17166,Alopecia (not including specific alopecia that suggest anything other than Alopecia Areata or non scarring alopecia) first diagnosis,Non-scarring Alopecia at first diagnosis with 365 days continuous observation. Cohort exit is the end of continuous observable time for the person.,141933003,141933,,,"{
	""phenotypeId"" : [
		""141933000""
	],
	""webApiCohortId"" : [
		""17166""
	],
	""cohortName"" : [
		""Alopecia (not including specific alopecia that suggest anything other than Alopecia Areata or non scarring alopecia) first diagnosis""
	],
	""oldCohortName"" : [
		""[PL 141933003] Alopecia (not including specific alopecia that suggest anything other than Alopecia Areata or non scarring alopecia) first diagnosis""
	],
	""logicDescription"" : [
		""Non-scarring Alopecia at first diagnosis with 365 days continuous observation. Cohort exit is the end of continuous observable time for the person.""
	],
	""cohortId"" : [
		""141933003""
	],
	""referentConceptId"" : [
		""141933""
	],
	""cohortType"" : [
		""""
	],
	""PMID"" : [
		""""
	],
	""oldPhenotypeId"" : [
		""141933000""
	],
	""referentConceptName"" : [
		""Alopecia areata""
	]
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (133280,4031164)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4031164)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (36716819,4291286,4291287,4297823,4067081,4067082,4067168,4007459,4065242,4099746,4063460,4063459,4056343,4066852,42599137,42598633,4274487,4105584,4065243,4250506,4185073,4004847,42598435,37396320,4080908,4063457,4150045,42596147,36716031,4274978,4033634,37396390,4067083,4243651,4066851,37116389,4046566,35622259,4266794,42572735,133959,4194637,4285863,37311329)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (36716819,4291286,4291287,4297823,4067081,4067082,4067168,4007459,4065242,4099746,4063460,4063459,4056343,4066852,42599137,42598633,4274487,4105584,4065243,4250506,4185073,4004847,42598435,37396320,4080908,4063457,4150045,42596147,36716031,4274978,4033634,37396390,4067083,4243651,4066851,37116389,4046566,35622259,4266794,42572735,133959,4194637,4285863,37311329)
  and c.invalid_reason is null

) I
) C
;

with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* , row_number() over (PARTITION BY co.person_id ORDER BY co.condition_start_date, co.condition_occurrence_id) as ordinal
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE C.ordinal = 1
-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,365,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,30,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;


with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),1)-1)

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 0, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,0,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select ir.cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from @results_database_schema.cohort_inclusion ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
WHERE ir.cohort_definition_id = @target_cohort_id
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select ir.cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from @results_database_schema.cohort_inclusion ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
WHERE ir.cohort_definition_id = @target_cohort_id
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

-- BEGIN: Censored Stats

-- END: Censored Stats

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;





TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 2,
					""First"" : true,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 365,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""First""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 2,
			""name"" : ""Alopecia and Non-scarring alopecia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 133280,
							""CONCEPT_NAME"" : ""Alopecia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""56317004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4031164,
							""CONCEPT_NAME"" : ""Non-scarring alopecia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""238725004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 3,
			""name"" : ""Alopecia (these should not be present)"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.671682e+07,
							""CONCEPT_NAME"" : ""Acute telogen effluvium"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""723005006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4291286,
							""CONCEPT_NAME"" : ""Alopecia due to disturbance of hair cycle"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""402637002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4291287,
							""CONCEPT_NAME"" : ""Alopecia due to friction and trauma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""402639004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4297823,
							""CONCEPT_NAME"" : ""Alopecia due to underlying disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""402638007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4067081,
							""CONCEPT_NAME"" : ""Alopecia febrilis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""201136006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4067082,
							""CONCEPT_NAME"" : ""Alopecia follicularis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""201140002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4067168,
							""CONCEPT_NAME"" : ""Alopecia hereditaria"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""201144006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4007459,
							""CONCEPT_NAME"" : ""Alopecia liminaris frontalis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""111024006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4065242,
							""CONCEPT_NAME"" : ""Alopecia localis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""201137002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4099746,
							""CONCEPT_NAME"" : ""Alopecia mucinosa"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""27382006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4063460,
							""CONCEPT_NAME"" : ""Alopecia neurotica"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""201141003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4063459,
							""CONCEPT_NAME"" : ""Alopecia senilis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""201135005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4056343,
							""CONCEPT_NAME"" : ""Alopecia totalis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""19754005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4066852,
							""CONCEPT_NAME"" : ""Cachectic alopecia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""201139004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.259914e+07,
							""CONCEPT_NAME"" : ""Collar frictional alopecia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""346961000009105"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED Veterinary"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.259863e+07,
							""CONCEPT_NAME"" : ""Colour mutant alopecia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""336301000009106"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED Veterinary"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4274487,
							""CONCEPT_NAME"" : ""Congenital absence of eyelash"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""63935007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4105584,
							""CONCEPT_NAME"" : ""Congenital alopecia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2965006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4065243,
							""CONCEPT_NAME"" : ""Diffuse alopecia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""201138007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4250506,
							""CONCEPT_NAME"" : ""Drug-related alopecia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""73383004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4185073,
							""CONCEPT_NAME"" : ""Endocrine alopecia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""54539003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4004847,
							""CONCEPT_NAME"" : ""Female pattern alopecia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1108009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.259844e+07,
							""CONCEPT_NAME"" : ""Follicular dysplasia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""332791000009102"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED Veterinary"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.739632e+07,
							""CONCEPT_NAME"" : ""Follicular hamartoma with alopecia and cystic fibrosis syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""716088000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4080908,
							""CONCEPT_NAME"" : ""Friction alopecia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""238469005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4063457,
							""CONCEPT_NAME"" : ""Frontal alopecia of women"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""201132008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4150045,
							""CONCEPT_NAME"" : ""Frostbite alopecia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""31082002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.259615e+07,
							""CONCEPT_NAME"" : ""Growth hormone responsive dermatosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""308661000009105"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED Veterinary"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.671603e+07,
							""CONCEPT_NAME"" : ""Hypogonadotropic hypogonadism with frontoparietal alopecia syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""721842008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4274978,
							""CONCEPT_NAME"" : ""Nutritional alopecia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""65130004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4033634,
							""CONCEPT_NAME"" : ""Odonto-onychial dysplasia with alopecia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""239019002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.739639e+07,
							""CONCEPT_NAME"" : ""Perniola Krajewska Carnevale syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""716191002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4067083,
							""CONCEPT_NAME"" : ""Peroneal alopecia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""201142005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4243651,
							""CONCEPT_NAME"" : ""Postinfectional hypotrichosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""59817009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4066851,
							""CONCEPT_NAME"" : ""Premature alopecia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""201133003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.711639e+07,
							""CONCEPT_NAME"" : ""Pseudoprogeria syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""733086003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4046566,
							""CONCEPT_NAME"" : ""Radiation alopecia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""22934003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.562226e+07,
							""CONCEPT_NAME"" : ""Satoyoshi syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""763630007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4266794,
							""CONCEPT_NAME"" : ""Scarring alopecia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""400088006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.257274e+07,
							""CONCEPT_NAME"" : ""Seasonal alopecia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""33961000009100"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED Veterinary"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 133959,
							""CONCEPT_NAME"" : ""Syphilitic alopecia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""59307008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4194637,
							""CONCEPT_NAME"" : ""Thermal burn alopecia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""67772009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4285863,
							""CONCEPT_NAME"" : ""Traumatic alopecia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""67488005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.731133e+07,
							""CONCEPT_NAME"" : ""Woodhouse Sakati syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""816067005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""First""
	},
	""InclusionRules"" : [
		{
			""name"" : ""Exclude patients with concomitant endocrine alopecia"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 3,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 30,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}"
